#!/bin/bash

set -eu
export scriptPath=$(which "$0" | sed -e "s|^\.\./|`pwd`/../|" -e "s|^\./|`pwd`/|")
export baseDir=$(dirname ${scriptPath})

if [ "$(whoami)" != "root" ]; then
  # We are still user nao

  # Create B-Human directory
  install -d -m 755 /home/nao/Config

  # Create logs dir for logger
  install -d -m 755 /home/nao/logs

  # Copy wireless profiles (the -D option of install cannot be used because the V5 system does not handle it correctly in conjunction with -t)
  install -d -m 755 /home/nao/Profiles
  install -m 644 -t /home/nao/Profiles ${baseDir}/Robot/Profiles/*

  # Add /home/nao to search path (.profile is needed by putty? and .bashrc for bush)
  install -m 644 ${baseDir}/profile /home/nao/.profile
  install -m 644 ${baseDir}/profile /home/nao/.bashrc

  # Add commands to /home/nao/bin
  install -d -m 755 /home/nao/bin
  install -m 755 -t /home/nao/bin ${baseDir}/bin/*

  # Copy sysroot
  install -D -m 755 -t /home/nao/sysroot/lib ${baseDir}/sysroot/lib/*
  chmod 644 /home/nao/sysroot/lib/libgcc_s.so.1

  install -m 644 ${baseDir}/asoundrc /home/nao/.asoundrc

  # Activate RoboCup mode by creating robocup.conf
  touch /home/nao/robocup.conf

  # Continue as root
  echo "Please enter password for user 'root' (usually also 'root')."
  python -c 'import pty; pty.spawn(("/bin/su", "-c", "${scriptPath}"))'
else
  # Now we are root

  # if install is executed on a installed robot, / is read-only, therefore remount it,
  # otherwise this line will have no effect
  mount -n -o remount,rw /

  # First of all, the overlay on /etc has to be unmounted.
  # Before that can be done, avahi and polkitd must be stopped because they are having their current directory somewhere inside /etc.
  systemctl stop avahi-daemon 2>/dev/null
  systemctl stop polkit 2>/dev/null
  umount /etc

  # Change name
  hostnamectl set-hostname $(cat ${baseDir}/Robot/hostname) 2>/dev/null
  python bin/setRobotName.py $(cat ${baseDir}/Robot/hostname) | grep -vE '\[(W|I)\]'

  # Change timezone (Europe/Berlin is not installed in this version)
  timedatectl set-timezone Europe/Paris 2>/dev/null
  echo "Europe/Paris" > /etc/timezone

  # Allow user nao to do priviliged things
  install -o root -g root -m 440 ${baseDir}/02_sudoers_bhuman /etc/sudoers.d/02_sudoers_bhuman


  # Network scripts
  install -m 644 -t /etc/systemd/system ${baseDir}/Robot/wired.service ${baseDir}/Robot/wireless.service
  systemctl enable wired.service 2>/dev/null
  systemctl enable wireless.service 2>/dev/null

  # Install service to store and restore alsa state
  install -m 644 ${baseDir}/alsa-restore.service /etc/systemd/system/alsa-restore.service
  systemctl enable alsa-restore.service 2>/dev/null

  # Install bhuman service and start it after booting
  install -m 644 ${baseDir}/bhuman.service /nao/etc/systemd/user/bhuman.service
  ln -snf ../bhuman.service /nao/etc/systemd/user/aldebaran.target.wants/bhuman.service

  for i in avahi-daemon bluetooth connman connman-wait-online initialise-pepper-1.8-hw ofono wpa_supplicant; do
    systemctl disable $i.service 2>/dev/null
  done

  # Save original naoqi autoload file (but do not overwrite if backup already exists) and install B-Human's
  cp -n /opt/aldebaran/etc/naoqi/autoload.ini /opt/aldebaran/etc/naoqi/autoload.org
  install -m 644 ${baseDir}/autoload.ini /opt/aldebaran/etc/naoqi/autoload.bh
  /home/nao/bin/tobhuman

  # Disable pulseaudio
  cp -n /nao/etc/systemd/user/pulseaudio.service /nao/etc/systemd/user/pulseudio.service.org
  install -m 644 ${baseDir}/pulseaudio.service /nao/etc/systemd/user/pulseaudio.service
  rm -f /usr/share/alsa/alsa.conf.d/50-pulseaudio.conf
  rm -f /usr/share/alsa/alsa.conf.d/99-pulseaudio-default.conf

  # Change the group ID in the alsa configuration to the numeric ID of the audio group since the cross-glibc seems to be unable to access /etc/group
  sed -i /usr/share/alsa/alsa.conf -e 's/audio/29/'

  # Create mountpoint for USB drive
  mkdir -p /media/usb

  # Add auto mount for USB drive
  if ! cat /etc/fstab | grep -q '/media/usb'; then
    echo "# USB drive" >> /etc/fstab
    echo "/dev/sda1                /media/usb               vfat         noauto,users,defaults,dmask=000,fmask=111 0    0" >> /etc/fstab
  fi

  sync

  echo "[INFO]: Rebooting"
  nohup bash -c "( sleep 1; reboot )" >/dev/null 2>&1 &
fi
